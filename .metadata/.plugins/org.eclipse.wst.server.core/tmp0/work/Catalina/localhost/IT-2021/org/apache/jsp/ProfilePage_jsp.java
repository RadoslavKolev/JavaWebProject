/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-05-12 13:21:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import users.User;
import users.Skill;

public final class ProfilePage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("users.Skill");
    _jspx_imports_classes.add("users.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("     \r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Начало</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write(" ");
 User user = (User) request.getAttribute("registeredUser"); 
 User sessionUser = (User) session.getAttribute("sessionUser"); 
 
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write(" <div class=\"container\">\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");
 if(request.getAttribute("message") == null) { 
      out.write("\r\n");
      out.write(" <div>\r\n");
      out.write(" \r\n");
      out.write(" <h2>Добре дошли!</h2>\r\n");
      out.write(" \r\n");
      out.write(" <form action=\"cookie\" method=\"post\"> \r\n");
      out.write(" \r\n");
      out.write(" <input type=\"submit\" value=\"Изключи\" />\r\n");
      out.write(" \r\n");
      out.write(" </form>\r\n");
      out.write(" </div>\r\n");
      out.write("  \r\n");
      out.write("  ");
 } 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" <div class=\"content\">\r\n");
      out.write(" <div class=\"profile_picture\"> \r\n");
      out.write(" <img src=\"images/male.svg\" alt=\"\">\r\n");
      out.write(" </div>\r\n");
      out.write(" <div class=\"my_info\">\r\n");
      out.write(" \r\n");
      out.write(" ");
 if(user.getId()==sessionUser.getId()) { 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" <div>\r\n");
      out.write(" <a href=\"user?id=");
      out.print( user.getId());
      out.write("&action=edit\">Редактирай профила</a>\r\n");
      out.write(" </div>\r\n");
      out.write(" \r\n");
      out.write(" ");
 } 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" <h2>Профилна информация</h2>\r\n");
      out.write(" <p>Име: ");
      out.print( user.getPersonalName() );
      out.write("\r\n");
      out.write(" </p>\r\n");
      out.write(" <p>Работа: ");
      out.print( user.getJobTitle() );
      out.write("</p>\r\n");
      out.write(" <p>Описание: ");
      out.print( user.getDescription() );
      out.write("</p>\r\n");
      out.write(" </div>\r\n");
      out.write(" \r\n");
      out.write(" <h2 class=\"centered\">Умения</h2>\r\n");
      out.write(" <div id=\"card1\">\r\n");
      out.write("\r\n");
      out.write(" <div class=\"card_column_one\">\r\n");
      out.write(" <h3>Професионални</h3>\r\n");
      out.write(" \r\n");
      out.write(" ");
 for(Skill skill:user.getProffesionalSkills()) {
      out.write("\r\n");
      out.write(" <label>");
      out.print( skill.getSkillName() );
      out.write("</label>\r\n");
      out.write("<progress max=\"100\" value=\"");
      out.print( skill.getLevel());
      out.write("\"> </progress>\r\n");
      out.write("\r\n");
      out.write(" ");
} 
      out.write("\r\n");
      out.write("   \r\n");
      out.write(" \r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"card_column_two\">\r\n");
      out.write("  \r\n");
      out.write("   <h3>Личностни</h3>\r\n");
      out.write("   \r\n");
      out.write("    ");
 for(Skill skill:user.getPersonalSkills()) {
      out.write("\r\n");
      out.write(" <label>");
      out.print( skill.getSkillName() );
      out.write("</label>\r\n");
      out.write("<progress max=\"100\" value=\"");
      out.print( skill.getLevel() );
      out.write("\"> </progress>\r\n");
      out.write("\r\n");
      out.write(" ");
} 
      out.write("\r\n");
      out.write("   \r\n");
      out.write("  </div>\r\n");
      out.write("   </div>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" <h2 class=\"centered\">Контакти</h2>\r\n");
      out.write(" <div id=\"card2\">\r\n");
      out.write("  <div class=\"card_column_one\">\r\n");
      out.write("  <p class=\"contacts\">Имейл</p>\r\n");
      out.write("  <p class=\"orange_text\">");
      out.print( user.getEmail() );
      out.write("</p>\r\n");
      out.write("  <p class=\"contacts\">Телефон</p>\r\n");
      out.write("  <p class=\"orange_text_bottom\">");
      out.print( user.getPhone() );
      out.write("</p>\r\n");
      out.write("  </div>\r\n");
      out.write(" \r\n");
      out.write("   <div class=\"card_column_two\">\r\n");
      out.write("  <p class=\"contacts\">Град</p>\r\n");
      out.write("  <p class=\"orange_text\">");
      out.print( user.getAddress().getCity() );
      out.write("</p>\r\n");
      out.write("  <p class=\"contacts\">Улица</p>\r\n");
      out.write("  <p class=\"orange_text_bottom\">");
      out.print( user.getAddress().getStreet() );
      out.write("</p>\r\n");
      out.write("   \r\n");
      out.write("   </div>\r\n");
      out.write(" \r\n");
      out.write(" </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write(" <footer> </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
