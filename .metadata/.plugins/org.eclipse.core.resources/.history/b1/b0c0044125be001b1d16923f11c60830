package users;

import java.util.HashSet;
import java.util.Set;

import javax.xml.bind.JAXBException;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

import xml.XMLWorker;

@XmlRootElement(name="users")
@XmlAccessorType(XmlAccessType.FIELD)

public class UserCollection {
	
	private static UserCollection instance = null;
	
	@XmlElement(name="user")

	private static Set<User> collection;
	static int index=1;
	
	private static String fileName = "C:\\Users\\MYPC\\Eclipse_workspace\\gr3b\\IT-2021\\src\\main\\webapp\\storage\\users.xml";
	
	private UserCollection()
	{}
	
public static UserCollection getInstance()
{
	if(instance == null)
	{
		instance = new UserCollection();
		collection = new HashSet<User>();
	}
	
	return instance;
	
	}

public void addUser(User user)
{
user.setId(index++);
collection.add(user);	
}

public User getUser(String userName)
{
	for(User u:collection)
	{
		if(u.getUserName().equals(userName))
		{
			return u;
		}
	}
	
	return null;
}


public User getById(int id)
{
	User user = null;
	for(User u:collection)
		
	{
		if(id==u.getId())
		{
			user = u;
		}
	}
	
	return user;	
}

public boolean checkifExist(User user)
{
	return collection.contains(user);
}

public Set<User> getUsers()
{
	return collection;
}

public void update()
{
	XMLWorker worker = new XMLWorker();
	try {
		worker.writeToXmlFile(fileName, this);
	} catch (JAXBException e) {
		e.printStackTrace();
	}
	
}

}
